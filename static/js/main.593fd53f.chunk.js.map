{"version":3,"sources":["components/Card/Card.js","components/ButtonGroup/ButtonGroup.js","components/Modal/Modal.js","containers/MovieListContainer/MovieListContainer.js","components/StarRating/StarRating.js","containers/MovieDetailsContainer/MovieDetailsContainer.js","App.js","serviceWorker.js","index.js"],"names":["Card","moviesList","map","movie","i","className","key","id","vote_average","to","backdrop_path","status","onError","e","target","src","alt","srcset","title","release_date","slice","original_language","ButtonGroup","toggleModal","loadMoreMovies","onClick","Modal","showModal","fetchMoviesByGenre","CSSTransition","timeout","in","unmountOnExit","classNames","stopPropagation","textContent","toLocaleLowerCase","MovieListContainer","state","movies","guest_session_id","page","genre","allGenre","action","adventure","comedy","crime","drama","fantasy","horror","mystery","romance","thriller","western","setState","prevState","urlDefault","urlGenre","Math","floor","random","fetch","then","res","json","console","log","concat","results","catch","err","this","Component","StarRating","props","rateMovie","onMouseOver","showRatingLabel","onMouseLeave","MovieDetailsContainer","rating","userRating","guestSessionId","ratedMovies","ratingLabel","width","calculateRating","formattedRating","roundedRating","round","method","body","JSON","stringify","value","headers","fetchRatedMovies","setTimeout","cache","label","undefined","window","location","href","match","Number","ok","history","push","filter","original_title","overview","style","popularity","production_companies","company","name","height","flexFlow","justifyContent","alignItems","App","cookies","get","set","path","expires","Date","getTime","exact","component","render","withCookies","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.593fd53f.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport \"./Card.scss\";\r\n\r\nconst Card = ({ moviesList }) => {\r\n  return (\r\n    <Fragment>\r\n      {moviesList !== null ? (\r\n        moviesList.map((movie, i) => (\r\n          <div className=\"card-container\" key={movie.id + i + movie.vote_average}>\r\n            <Link to={`/${movie.id}`}>\r\n           \r\n            <div className=\"card-container__rating\">\r\n              <span>{movie.vote_average}</span>\r\n            </div>\r\n            <div className=\"card-container__img\">\r\n              {movie.backdrop_path && movie.backdrop_path.status !== 500 ? (\r\n                <img\r\n                  onError={e =>\r\n                    (e.target.src = \"https://i.imgur.com/U69zau9.jpg\")\r\n                  }\r\n                  src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path} `}\r\n                  alt=\"\"\r\n                  srcset=\"\"\r\n                />\r\n              ) : (\r\n                <img src={`https://i.imgur.com/U69zau9.jpg`} alt=\"\" srcset=\"\" />\r\n              )}\r\n            </div>\r\n            <div className=\"card-container__text\">\r\n              <h1>\r\n                {movie.title} ({movie.release_date.slice(0, 4)})\r\n              </h1>\r\n              <p>Language: {movie.original_language}</p>\r\n            </div>\r\n            </Link>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <h1>Loading...</h1>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./ButtonGroup.scss\";\r\n\r\nconst ButtonGroup = ({ toggleModal, loadMoreMovies }) => {\r\n  return (\r\n    <div className=\"button-group\">\r\n      <span></span>\r\n\r\n      <button className=\"button-group--modal\" onClick={() => loadMoreMovies()}>\r\n        <p>Load</p>\r\n      </button>\r\n      <button className=\"button-group--load\" onClick={() => toggleModal()}>\r\n        <i className=\"material-icons\">shuffle</i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ButtonGroup;\r\n","import React, { Fragment } from \"react\";\r\nimport \"./Modal.scss\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nconst Modal = ({ showModal, toggleModal, fetchMoviesByGenre }) => {\r\n  return (\r\n    <CSSTransition\r\n      timeout={1000}\r\n      in={showModal}\r\n      unmountOnExit\r\n      classNames=\"modal-container\"\r\n    >\r\n      <div\r\n        className=\"modal-container\"\r\n        onClick={e => {\r\n          toggleModal();\r\n        }}\r\n      >\r\n        <div className=\"modal\" onClick={e => e.stopPropagation()}>\r\n          {\" \"}\r\n          {/* Prevents the toggleModal from being triggered*/}\r\n          <div className=\"modal__heading\">\r\n            <h1>Select Genre</h1>\r\n          </div>\r\n          <div className=\"modal__buttons\">\r\n            <button onClick={e => fetchMoviesByGenre(e.target.textContent.toLocaleLowerCase())}>\r\n              Action\r\n            </button>\r\n            <button onClick={e => fetchMoviesByGenre(e.target.textContent.toLocaleLowerCase())}>\r\n              Adventure\r\n            </button>\r\n            <button onClick={e => fetchMoviesByGenre(e.target.textContent.toLocaleLowerCase())}>\r\n              Comedy\r\n            </button>\r\n            <button onClick={e => fetchMoviesByGenre(e.target.textContent.toLocaleLowerCase())}>\r\n              Crime\r\n            </button>\r\n            <button onClick={e => fetchMoviesByGenre(e.target.textContent.toLocaleLowerCase())}>\r\n              Drama\r\n            </button>\r\n            <button onClick={e => fetchMoviesByGenre(e.target.textContent.toLocaleLowerCase())}>\r\n              Fantasy\r\n            </button>\r\n            <button onClick={e => fetchMoviesByGenre(e.target.textContent.toLocaleLowerCase())}>\r\n              Horror\r\n            </button>\r\n            <button onClick={e => fetchMoviesByGenre(e.target.textContent.toLocaleLowerCase())}>\r\n              Mystery\r\n            </button>\r\n            <button onClick={e => fetchMoviesByGenre(e.target.textContent.toLocaleLowerCase())}>\r\n              Romance\r\n            </button>\r\n            <button onClick={e => fetchMoviesByGenre(e.target.textContent.toLocaleLowerCase())}>\r\n              Sci-fi\r\n            </button>\r\n            <button onClick={e => fetchMoviesByGenre(e.target.textContent.toLocaleLowerCase())}>\r\n              Thriller\r\n            </button>\r\n            <button onClick={e => fetchMoviesByGenre(e.target.textContent.toLocaleLowerCase())}>\r\n              Western\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"./MovieListContainer.scss\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport ButtonGroup from \"../../components/ButtonGroup/ButtonGroup\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\n\r\nclass MovieListContainer extends Component {\r\n  state = {\r\n    movies: null,\r\n    showModal: false,\r\n    guest_session_id: null,\r\n    page: 1,\r\n    genre: null,\r\n    allGenre: {\r\n      action: 28,\r\n      adventure: 12,\r\n      comedy: 35,\r\n      crime: 80,\r\n      drama: 18,\r\n      fantasy: 14,\r\n      horror: 27,\r\n      mystery: 9648,\r\n      romance: 10749,\r\n      \"sci-fi\": 878,\r\n      thriller: 53,\r\n      western: 37\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/popular?api_key=f3edabafe1f7ed3f14c3e13e2f3a8ee3&language=en-US&page=1`\r\n    )\r\n      .then(res => {\r\n        if (res.status !== 200) {\r\n          console.log(\r\n            `[ERROR]: ${res.status}`\r\n          );\r\n        } else {\r\n          return res.json();\r\n        }\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          movies: res.results\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        showModal: !prevState.showModal\r\n      };\r\n    });\r\n  };\r\n\r\n  loadMoreMovies = () => {\r\n    const genre = this.state.genre;\r\n    const page = this.state.page;\r\n    const urlDefault = `https://api.themoviedb.org/3/movie/popular?api_key=f3edabafe1f7ed3f14c3e13e2f3a8ee3&language=en-US&page=${page +\r\n      1}`;\r\n    const urlGenre = `https://api.themoviedb.org/3/discover/movie?api_key=f3edabafe1f7ed3f14c3e13e2f3a8ee3&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${Math.floor(\r\n      Math.random() * (500 - 1) + 1\r\n    )}&with_genres=${genre}`;\r\n\r\n    fetch(this.state.genre ? urlGenre : urlDefault)\r\n      .then(res => {\r\n        if (res.status !== 200) {\r\n          console.log(`[ERROR]: ${res.status} `);\r\n        } else {\r\n          return res.json();\r\n        }\r\n      })\r\n      .then(res => {\r\n        const movies = [...this.state.movies].concat(res.results);\r\n        this.setState(prevState => {\r\n          return { page: prevState.page + 1, movies };\r\n        });\r\n      })\r\n      .catch(err => console.log([\"ERROR\"], err));\r\n  };\r\n\r\n  fetchMoviesByGenre = genre => {\r\n    const allGenre = this.state.allGenre;\r\n    this.toggleModal();\r\n    fetch(\r\n      `https://api.themoviedb.org/3/discover/movie?api_key=f3edabafe1f7ed3f14c3e13e2f3a8ee3&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${Math.random() *\r\n        (500 - 1) +\r\n        1}&with_genres=${this.state.allGenre[genre]}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        this.setState({\r\n          movies: res.results,\r\n          genre: allGenre[genre]\r\n        });\r\n      })\r\n      .catch(err => console.log([\"ERROR\"], err));\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Modal\r\n          fetchMoviesByGenre={this.fetchMoviesByGenre}\r\n          showModal={this.state.showModal}\r\n          toggleModal={this.toggleModal}\r\n        />\r\n        <div className=\"movie-list\">\r\n          <Card moviesList={this.state.movies} />\r\n        </div>\r\n        <div className=\"buttons-container\">\r\n          <ButtonGroup\r\n            toggleModal={this.toggleModal}\r\n            loadMoreMovies={this.loadMoreMovies}\r\n          />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieListContainer;\r\n","import React, { Fragment } from \"react\";\r\n\r\nconst StarRating = props => {\r\n  return (\r\n    <Fragment>\r\n      <i className=\"material-icons\">\r\n        <span\r\n          onClick={() => props.rateMovie(1)}\r\n          onMouseOver={() => props.showRatingLabel(\"😒\", 10)}\r\n          onMouseLeave={() => props.showRatingLabel(\"\")}\r\n        >\r\n          star\r\n        </span>{\" \"}\r\n        <span\r\n          onClick={() => props.rateMovie(2)}\r\n          onMouseOver={() => props.showRatingLabel(\"🥱\", 20)}\r\n          onMouseLeave={() => props.showRatingLabel(\"\")}\r\n        >\r\n          star\r\n        </span>{\" \"}\r\n        <span\r\n          onClick={() => props.rateMovie(3)}\r\n          onMouseOver={() => props.showRatingLabel(\"👎\", 30)}\r\n          onMouseLeave={() => props.showRatingLabel(\"\")}\r\n        >\r\n          star\r\n        </span>{\" \"}\r\n        <span\r\n          onClick={() => props.rateMovie(4)}\r\n          onMouseOver={() => props.showRatingLabel(\"😐\", 40)}\r\n          onMouseLeave={() => props.showRatingLabel(\"\")}\r\n        >\r\n          star\r\n        </span>{\" \"}\r\n        <span\r\n          onClick={() => props.rateMovie(5)}\r\n          onMouseOver={() => props.showRatingLabel(\"👌\", 50)}\r\n          onMouseLeave={() => props.showRatingLabel(\"\")}\r\n        >\r\n          star\r\n        </span>{\" \"}\r\n        <span\r\n          onClick={() => props.rateMovie(6)}\r\n          onMouseOver={() => props.showRatingLabel(\"🙂\", 60)}\r\n          onMouseLeave={() => props.showRatingLabel(\"\")}\r\n        >\r\n          star\r\n        </span>{\" \"}\r\n        <span\r\n          onClick={() => props.rateMovie(7)}\r\n          onMouseOver={() => props.showRatingLabel(\"👍\", 70)}\r\n          onMouseLeave={() => props.showRatingLabel(\"\")}\r\n        >\r\n          star\r\n        </span>{\" \"}\r\n        <span\r\n          onClick={() => props.rateMovie(8)}\r\n          onMouseOver={() => props.showRatingLabel(\"😀\", 80)}\r\n          onMouseLeave={() => props.showRatingLabel(\"\")}\r\n        >\r\n          star\r\n        </span>{\" \"}\r\n        <span\r\n          onClick={() => props.rateMovie(9)}\r\n          onMouseOver={() => props.showRatingLabel(\"😮\", 90)}\r\n          onMouseLeave={() => props.showRatingLabel(\"\")}\r\n        >\r\n          star\r\n        </span>{\" \"}\r\n        <span\r\n          onClick={() => props.rateMovie(10)}\r\n          onMouseOver={() => props.showRatingLabel(\"🤩\", 100)}\r\n          onMouseLeave={() => props.showRatingLabel(\"\")}\r\n        >\r\n          star\r\n        </span>\r\n      </i>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default StarRating;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport \"./MovieDetailsContainer.scss\";\r\nimport StarRating from \"../../components/StarRating/StarRating\";\r\n\r\nexport default class MovieDetailsContainer extends Component {\r\n  state = {\r\n    id: 0,\r\n    movie: null,\r\n    rating: 0,\r\n    userRating: null,\r\n    guestSessionId: null,\r\n    ratedMovies: null,\r\n    ratingLabel: null,\r\n    width: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${\r\n        window.location.href.match(/\\d+/g).map(Number) // <--- in development server add [1] after .map(number)\r\n      }?api_key=f3edabafe1f7ed3f14c3e13e2f3a8ee3&language=en-US`\r\n    ).then(res => {\r\n      if (res.ok) {\r\n        debugger;\r\n        res = res.json().then(res => {\r\n          this.calculateRating(res.vote_average);\r\n          this.setState({ movie: res, id: res.id }, () => {\r\n            this.fetchRatedMovies(this.props.guestSessionId);\r\n          });\r\n        });\r\n      } else {\r\n        return this.props.history.push(\"/\");\r\n      }\r\n    });\r\n  }\r\n\r\n  calculateRating = rating => {\r\n    const totalStars = 10;\r\n    const formattedRating = (rating / totalStars) * 100;\r\n    const roundedRating = `${Math.round(formattedRating / 5) * 5}`;\r\n\r\n    this.setState({ rating: roundedRating, width: roundedRating });\r\n  };\r\n\r\n  rateMovie = rating => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${this.state.id}/rating?guest_session_id=${this.props.guestSessionId}&api_key=f3edabafe1f7ed3f14c3e13e2f3a8ee3`,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          value: rating\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json;charset=utf-8\"\r\n        }\r\n      }\r\n    )\r\n      .then(res => res.json())\r\n      .then(res => this.fetchRatedMovies(this.props.guestSessionId));\r\n  };\r\n\r\n  fetchRatedMovies = guestSessionId => {\r\n    setTimeout(() => {\r\n      fetch(\r\n        `\r\n        https://api.themoviedb.org/3/guest_session/${guestSessionId}/rated/movies?sort_by=created_at.asc&language=en-US&api_key=f3edabafe1f7ed3f14c3e13e2f3a8ee3`,\r\n        {\r\n          method: \"GET\",\r\n          cache: \"no-cache\"\r\n        }\r\n      )\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          this.setState({\r\n            ratedMovies: res.results\r\n          });\r\n        })\r\n        .catch(err => console.log(err, \"failed to fetch rated movies\"));\r\n    }, 1000);\r\n  };\r\n\r\n  showRatingLabel = (label, width) => {\r\n    this.setState({\r\n      ratingLabel: label,\r\n      width: width === undefined ? this.state.rating : width\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.movie) {\r\n      const { movie, id } = this.state;\r\n      let userRating = null;\r\n      if (this.state.ratedMovies) {\r\n        userRating =\r\n          this.state.ratedMovies.filter((movie, i) => movie.id === id) || null;\r\n      }\r\n\r\n      return (\r\n        <div className=\"movie-details-container\">\r\n          <div className=\"card\">\r\n            <div className=\"card__img\">\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/original/${movie.backdrop_path} `}\r\n                alt=\"\"\r\n                srcset=\"\"\r\n              />\r\n            </div>\r\n            <div className=\"card__info\">\r\n              <h1>{movie.original_title}</h1>\r\n              <p>{movie.overview}</p>\r\n\r\n              <ul>\r\n                <li>\r\n                  <p className=\"label\">{this.state.ratingLabel}</p>\r\n                </li>\r\n                <li>\r\n                  {\" \"}\r\n                  Rating: {movie.vote_average}{\" \"}\r\n                  <span>\r\n                    {\" \"}\r\n                    {/* Not proud of this code  ¯\\_(ツ)_/¯*/}\r\n                    <div className=\"stars-outer\">\r\n                      <StarRating\r\n                        showRatingLabel={this.showRatingLabel}\r\n                        rateMovie={this.rateMovie}\r\n                      />\r\n\r\n                      <div\r\n                        className=\"stars-inner\"\r\n                        style={{ width: `${this.state.width}%` }}\r\n                      >\r\n                        <StarRating\r\n                          showRatingLabel={this.showRatingLabel}\r\n                          rateMovie={this.rateMovie}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </span>\r\n                </li>\r\n                {userRating !== null && userRating[0] ? (\r\n                  <li>Your Rating: {userRating[0].rating}</li>\r\n                ) : null}\r\n                <li>Popularity: {movie.popularity} </li>\r\n                <li>Language: {movie.original_language}</li>\r\n                <li>\r\n                  Production companies:{\" \"}\r\n                  {movie.production_companies.map((company, i) => {\r\n                    if (movie.production_companies[++i] !== undefined) {\r\n                      return company.name + \", \";\r\n                    } else {\r\n                      return \"and \" + company.name;\r\n                    }\r\n                  })}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          style={{\r\n            height: \"100vh\",\r\n            flexFlow: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\"\r\n          }}\r\n        >\r\n          <h1>Loading...</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./App.scss\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport MovieListContainer from \"./containers/MovieListContainer/MovieListContainer\";\r\nimport MovieDetailsContainer from \"./containers/MovieDetailsContainer/MovieDetailsContainer\";\r\nimport { Cookies, withCookies } from \"react-cookie\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    guestSessionId: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.cookies.get(\"guestSessionId\")) {\r\n      this.setState({\r\n        guestSessionId: this.props.cookies.get(\"guestSessionId\")\r\n      });\r\n    } else {\r\n      const { cookies } = this.props;\r\n      fetch(\r\n        `https://api.themoviedb.org/3/authentication/guest_session/new?api_key=f3edabafe1f7ed3f14c3e13e2f3a8ee3`\r\n      )\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          cookies.set(\"guestSessionId\", res.guest_session_id, {\r\n            path: \"/\",\r\n            expires: new Date(new Date().getTime() + 60 * 60 * 1000 * 24)\r\n          });\r\n          this.setState({\r\n            guestSessionId: res.guest_session_id\r\n          });\r\n        });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={MovieListContainer} />\r\n          <Route\r\n            path=\"/:movie\"\r\n            exact\r\n            render={props => (\r\n              <MovieDetailsContainer\r\n                guestSessionId={this.state.guestSessionId}\r\n                history={props.history}\r\n              />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withCookies(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { CookiesProvider } from \"react-cookie\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <CookiesProvider>\r\n    <App />\r\n  </CookiesProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}